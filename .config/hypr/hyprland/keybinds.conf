$fileManager  = nautilus
$fileTerminal = kitty yazi
$terminal     = kitty
$launch       = pkill -x anyrun || anyrun
$lock         = hyprlock
$power        = pkill -x wlogout || wlogout
$editor       = neovide --grid 100x100
$browser      = firefox
$setting      = XDG_CURRENT_DESKTOP=gnome gnome-control-center
$statusBar    = $scripts/waybar/launch.sh
$notifacation = swaync-client -t
$cliphist     = cliphist list | anyrun --show-results-immediately true --plugins libstdin.so | cliphist decode | wl-copy
$screenshot   = hyprshot -m active 
$supershot    = $scripts/screenshot
$wallpaper    = $scripts/swww/random.sh
$menu         = $scripts/rofi/launch.sh drawer
$gamelauncher = $scripts/rofi/gamelauncher.fish

# 修饰键
$mainMod  = SUPER # 俗称 win 键
$shiftMod = SUPER SHIFT
$optMod   = SUPER ALT
$ctrlMod  = SUPER CTRL


#- 窗口管理 --------------------
# 请查看 submap.conf 了解怎样用键盘调整窗口大小
# 或者不进入RESIZE 模式，直接用上下左右，但我不喜欢使用方向键

binde = $mainMod, Left , resizeactive, -20 0
binde = $mainMod, Down , resizeactive,  0  20
binde = $mainMod, Up   , resizeactive,  0 -20
binde = $mainMod, Right, resizeactive,  20 0

# 当然用鼠标移动窗口是更方便的
# Super + 鼠标左键移动位置
# Super + 鼠标右键改变大小
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# 关闭窗口 Quit
bind = $mainMod , Q, killactive,
# 强制关闭窗口
bind = $shiftMod, Q, forcekillactive,

# 移动焦点 Super+ H/L/K/J 
bind = $mainMod, H, movefocus, l
bind = $mainMod, L, movefocus, r
bind = $mainMod, K, movefocus, u
bind = $mainMod, J, movefocus, d

# 移动窗口 Super+ Shift + H/L/K/J 
$movefloating = exec, hyprctl activewindow -j | jq -r .floating | grep -q true && hyprctl dispatch moveactive 
$movewindow   = hyprctl dispatch movewindow
binde = $shiftMod, H, $movefloating -30 0  || $movewindow l
binde = $shiftMod, L, $movefloating  30 0  || $movewindow r
binde = $shiftMod, K, $movefloating  0 -30 || $movewindow u
binde = $shiftMod, J, $movefloating  0 30  || $movewindow d

# 窗口间循环
bind = $mainMod, Tab, cyclenext
bind = $mainMod, Tab, bringactivetotop

# 切换到紧急窗口
bind = $mainMod, U, focusurgentorlast

# 浮动窗口和全屏窗口
bind = $mainMod, F, fullscreen, 2

# 告诉窗口内部应用全屏，但窗口本身不全屏
bind = $optMod,  F, fullscreenstate,0 2

# 假装是浮动窗口
bind = $ctrlMod, F, pseudo

# 切换浮动
bind = $shiftMod, F, togglefloating
bind = $shiftMod, F, resizeactive, exact 50% 60%
bind = $shiftMod, F, centerwindow

# Super + \ 切换两窗间分割方式
bind = $mainMod, BackSlash, togglesplit


# 组间切换
# 请查看 submap.conf 了解怎样修改窗口组
bind = $mainMod, G, changegroupactive


#- 工作区 ------------
# 加上Shift就带着窗口移动，加上Ctrl就静默移动，都不加就只移动焦点
# 移动焦点到工作区 Super + [0-9]
bind = $mainMod , 1, workspace, 1
bind = $mainMod , 2, workspace, 2
bind = $mainMod , 3, workspace, 3
bind = $mainMod , 4, workspace, 4
bind = $mainMod , 5, workspace, 5
bind = $mainMod , 6, workspace, 6
bind = $mainMod , 7, workspace, 7
bind = $mainMod , 8, workspace, 8
bind = $mainMod , 9, workspace, 9
bind = $mainMod , 0, workspace, 10

# 移动窗口到工作区 Super + Shift + [0-9]
bind = $shiftMod, 1, movetoworkspace, 1
bind = $shiftMod, 2, movetoworkspace, 2
bind = $shiftMod, 3, movetoworkspace, 3
bind = $shiftMod, 4, movetoworkspace, 4
bind = $shiftMod, 5, movetoworkspace, 5
bind = $shiftMod, 6, movetoworkspace, 6
bind = $shiftMod, 7, movetoworkspace, 7
bind = $shiftMod, 8, movetoworkspace, 8
bind = $shiftMod, 9, movetoworkspace, 9
bind = $shiftMod, 0, movetoworkspace, 10

# 移动窗口到工作区但不改变焦点 Super + Ctrl + [0-9]
bind = $ctrlMod , 1, movetoworkspacesilent, 1
bind = $ctrlMod , 2, movetoworkspacesilent, 2
bind = $ctrlMod , 3, movetoworkspacesilent, 3
bind = $ctrlMod , 4, movetoworkspacesilent, 4
bind = $ctrlMod , 5, movetoworkspacesilent, 5
bind = $ctrlMod , 6, movetoworkspacesilent, 6
bind = $ctrlMod , 7, movetoworkspacesilent, 7
bind = $ctrlMod , 8, movetoworkspacesilent, 8
bind = $ctrlMod , 9, movetoworkspacesilent, 9
bind = $ctrlMod , 0, movetoworkspacesilent, 10

# 切换工作区 Super + 鼠标滚轮
bind = $mainMod , mouse_down, workspace, e+1
bind = $mainMod , mouse_up, workspace, e-1

# 特殊工作区
$togglespecial = $scripts/hypr/togglespecial.fish
bind = $mainMod , Comma, togglespecialworkspace, magic
bind = $shiftMod, Comma, execr, $togglespecial movetoworkspace
bind = $ctrlMod,  Comma, execr, $togglespecial movetoworkspacesilent

# 用 [] 来左右切换/移动工作区
bind = $mainMod , BracketLeft, workspace, -1
bind = $mainMod , BracketRight, workspace, +1
bind = $shiftMod, BracketLeft, movetoworkspace, -1
bind = $shiftMod, BracketRight, movetoworkspace, +1
bind = $ctrlMod , BracketLeft, movetoworkspacesilent, -1
bind = $ctrlMod , BracketRight, movetoworkspacesilent, +1

# 工作区总览
bindr= $shiftMod,Tab, overview:toggle


#- 桌面组件------------
# 通知和状态栏 [N]otification
bind = $mainMod , N, execr, $notifacation # 打开通知
bind = $shiftMod, N, execr, $statusBar    # 在当前显示器上打开状态栏

# 电源管理
bind = $mainMod , Escape, execr, $power   # 打开电源管理
bind = $shiftMod, Escape, execr, $lock    # 锁屏
bindl= $ctrlMod , Escape, exit            # 强制退出桌面（别试）

# 启动器
bind = $mainMod , Space, execr, $launch
bind = $shiftMod, Space, execr, $menu

# 剪切板
bind = $shiftMod, V, execr, $cliphist

# Super + C/V
bind = $mainMod, V, sendshortcut, SHIFT, Insert, activewindowcommand
bind = $mainMod, C, sendshortcut, CTRL, Insert, activewindowcommand

# 颜色拾取 Super + [C]olor
bind = $shiftMod, C, execr, hyprpicker -a

# 截屏 [S]creenshot
# Ctrl 是窗口截屏，Alt 是屏幕截屏       看↓这里↓
bind = $mainMod, S, execr, $screenshot -m region --clipboard-only 
bind = $optMod , S, execr, $screenshot -m output --clipboard-only 
bind = $ctrlMod, S, execr, $screenshot -m window --clipboard-only

# 加上 Shift 编辑截屏, 也可以保存         看↓这里↓
bind = $mainMod SHIFT, S, execr, $supershot/region.sh
bind = $optMod  SHIFT, S, execr, $supershot/output.sh
bind = $ctrlMod SHIFT, S, execr, $supershot/window.sh

# 扫码 [S]can
bind = $ctrlMod ALT, S, execr, $supershot/qrcode.sh

# 切换夜间模式 [D]ark
bind = $mainMod , D, execr, darkman toggle
bind = $shiftMod , D, invertactivewindow

# Super + shift + 左键-> 换壁纸
bind = $shiftMod, mouse:272, exec, $wallpaper


#- 应用------------
# 终端和编辑器 [T]erminal and edi[T]or （ Return => Enter ）
bind = $mainMod , T, execr, $terminal
bind = $shiftMod, T, execr, $editor
bind = $mainMod , Return, exec, [float; center; size 45%] $terminal
bind = $shiftMod, Return, execr, $editor

# 文件浏览器 [E]xplorer
bind = $mainMod , E, execr, $fileManager
bind = $shiftMod, E, exec, $fileTerminal 

# 浏览器 [B]rowser
bind = $mainMod , B, execr, $browser

# 设置 因为 windows 也是win + I
bind = $mainMod , I, execr, $setting

# 选择游戏 [G]ame
bind = $ctrlMod, G, execr, $gamelauncher


#- 媒体 --------------
binde=, XF86AudioRaiseVolume, execr, pamixer -i 5  # 音量+
binde=, XF86AudioLowerVolume, execr, pamixer -d 5  # 音量-
binde=, XF86AudioMicMute,     execr, pamixer -m    # 静音
binde=, XF86AudioMute,        execr, pamixer -t    # 切换静音

# 亮度 +/-
binde=, XF86MonBrightnessDown, execr, brightnessctl set 5%-
binde=, XF86MonBrightnessUp,   execr, brightnessctl set 5%+

bind =, XF86AudioPlay,        execr, playerctl play     # 播放
bind =, XF86AudioPause,       execr, playerctl pause    # 暂停
bind =, XF86AudioNext,        execr, playerctl next     # 下一首
bind =, XF86AudioPrev,        execr, playerctl previous # 上一首

binde= $mainMod, F1, execr, pamixer -d 5  # 音量+
binde= $mainMod, F2, execr, pamixer -i 5  # 音量-
binde= $mainMod, F3, execr, pamixer -t    # 切换静音
binde= $mainMod, F5, execr, brightnessctl set 5%- # 亮度+
binde= $mainMod, F6, execr, brightnessctl set 5%+ # 亮度-
bind = $mainMod, F7, execr, playerctl play-pause # 播放暂停
bind = $mainMod, F8, execr, playerctl previous   # 下一首
bind = $mainMod, F9, execr, playerctl next       # 上一首
                                                 
#- Zoom -----------
# Super + 鼠标滚轮放大缩小
bind = $ctrlMod, mouse_down, exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor | awk '/^float.*/ {print $2 * 1.1}')
bind = $ctrlMod, mouse_up,   exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor | awk '/^float.*/ {print $2 * 0.9}')

# Super + -/=
binde= $mainMod, equal,      exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor | awk '/^float.*/ {print $2 * 1.2}')
binde= $mainMod, minus,      exec, hyprctl -q keyword cursor:zoom_factor $(hyprctl getoption cursor:zoom_factor | awk '/^float.*/ {print $2 * 0.8}')
